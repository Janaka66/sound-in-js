{"version":3,"sources":["pages/Home.js","pages/NoMatch.js","components/Example1/Container.js","components/Example1/Component.js","pages/Example1.js","components/Example2/utils.js","components/Example2/Container.js","components/Example2/Component.js","pages/Example2.js","router.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","NoMatch","Example1","className","controls","src","type","Example1Page","loadFile","url","Promise","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","response","audioContext","audioBuffer","source","scriptNode","wrap","_context","prev","next","axios","get","responseType","sent","AudioContext","window","webkitAudioContext","decodeAudioData","data","play","resumeTime","arguments","length","undefined","createScriptProcessor","numberOfChannels","createBufferSource","buffer","connect","destination","start","stop","duration","t0","this","_x","_x2","apply","Example2","compose","withState","startedAt","pausedAt","isPause","withProps","audionState","setAudionState","changeAudionState","newState","objectSpread","withHandlers","onPlayBtnClick","props","player","newPlayer","setLoading","setPlayer","Date","now","abrupt","setPlayState","console","log","onStopBtnClick","onVolumeChange","_ref3","max","setVolumeLevel","onProgressClick","e","rate","clientX","target","offsetWidth","playbackTime","setProgress","parseInt","lifecycle","componentDidMount","_this","setInterval","_this$props$audionSta","playState","progress","volumeLevel","loading","onClick","role","style","width","concat","aria-valuemax","disabled","js_default","maxValue","minValue","value","min","onChange","Example2Page","AppRouter","Switch","Route","exact","path","component","App","BrowserRouter","router_AppRouter","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sNAEMA,EAAO,kBAAMC,EAAAC,EAAAC,cAAA,oBCAbC,EAAU,kBAAMH,EAAAC,EAAAC,cAAA,6BCCTE,ECDoB,kBAC/BJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,SAAOG,UAAU,cAAjB,kBACfL,EAAAC,EAAAC,cAAA,SAAOI,UAAQ,GACbN,EAAAC,EAAAC,cAAA,UAAQK,IAAI,gBAAgBC,KAAK,kBCHjCC,EAAe,kBAAMT,EAAAC,EAAAC,cAACE,EAAD,+DCMrBM,EAAW,SAACC,GAAD,OAAS,IAAIC,QAAJ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAf,EAAAgB,KAAY,SAAAC,EAAOC,EAASC,GAAhB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAf,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGZC,IAAMC,IAAIpB,EAAK,CACpCqB,aAAc,gBAJmB,cAG7BX,EAH6BM,EAAAM,KANpCC,aAAeC,OAAOD,cAAgBC,OAAOC,mBAatCd,EAZc,IAAIY,aAKWP,EAAAE,KAAA,EASTP,EAAae,gBAAgBhB,EAASiB,MAT7B,OAS7Bf,EAT6BI,EAAAM,KAW/BT,EAAS,KACTC,EAAa,KAqBjBN,EAAQ,CAAEoB,KAnBG,WAAoB,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EAEzBhB,EAAaH,EAAasB,sBAAsB,KAAMrB,EAAYsB,iBAAkBtB,EAAYsB,mBAGhGrB,EAASF,EAAawB,sBACfC,OAASxB,EAEhBC,EAAOwB,QAAQvB,GACfD,EAAOwB,QAAQ1B,EAAa2B,aAC5BxB,EAAWuB,QAAQ1B,EAAa2B,aAGhCzB,EAAO0B,MAAM,EAAGV,IAMFW,KAJH,WACX3B,GAAUA,EAAO2B,KAAK,IAGFC,SAAU7B,EAAY6B,WAjCTzB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SAmCnCP,EAAMO,EAAA0B,IAnC6B,yBAAA1B,EAAAwB,SAAAjC,EAAAoC,KAAA,aAAZ,gBAAAC,EAAAC,GAAA,OAAA3C,EAAA4C,MAAAH,KAAAb,YAAA,sBCJbiB,eAAWC,YACtBC,YAAU,cAAe,iBAAkB,IAC3CA,YAAU,WAAY,cAAe,GACrCA,YAAU,YAAa,eAAgB,QACvCA,YAAU,UAAW,cAAc,GACnCA,YAAU,SAAU,YAAa,MACjCA,YAAU,cAAe,iBAAkB,CACzCC,UAAW,KACXC,SAAU,KACVC,SAAS,EACTX,SAAU,IAEZY,YAAU,SAAAnD,GAAA,IAAGoD,EAAHpD,EAAGoD,YAAaC,EAAhBrD,EAAgBqD,eAAhB,MAAsC,CAC9CC,kBAAmB,SAAAC,GAAQ,OAAIF,EAAepD,OAAAuD,EAAA,EAAAvD,CAAA,GAAKmD,EAAgBG,QAErEE,YAAa,CACXC,eAAgB,SAACC,GAAD,OAAA1D,OAAAC,EAAA,GAAAC,EAAAf,EAAAgB,KAAW,SAAAC,IAAA,IAAAuD,EAAAR,EAAAS,EAAA,OAAA1D,EAAAf,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB4C,EAAwBD,EAAxBC,OAAQR,EAAgBO,EAAhBP,YADStC,EAAAC,KAAA,EAInB6C,EAJmB,CAAA9C,EAAAE,KAAA,gBAKrB2C,EAAMG,YAAW,GALIhD,EAAAE,KAAA,EAMGnB,EAAS,iBANZ,cAMfgE,EANe/C,EAAAM,KAQrBuC,EAAMG,YAAW,GACjBH,EAAMI,UAAUF,GAChBF,EAAML,kBAAkB,CACtBN,UAAWgB,KAAKC,MAChBf,SAAS,EACTX,SAAUsB,EAAUtB,WAGtBsB,EAAUnC,KAAK,GAhBMZ,EAAAoD,OAAA,SAiBdP,EAAMQ,aAAa,SAjBL,eAoBvBR,EAAML,kBAAkB,CACtBN,UAAWgB,KAAKC,MAAQb,EAAYH,SACpCC,SAAS,IAGXU,EAAOlC,KAAK0B,EAAYH,SAAW,KAzBZnC,EAAAoD,OAAA,SA2BhBP,EAAMQ,aAAa,SA3BH,QAAArD,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SA6BvB6C,EAAMG,YAAW,GACjBM,QAAQC,IAARvD,EAAA0B,IA9BuB,yBAAA1B,EAAAwB,SAAAjC,EAAAoC,KAAA,cAiC3B6B,eAAgB,SAAAX,GAAK,OAAI,WAAM,IACrBC,EAAyBD,EAAzBC,OAAQR,EAAiBO,EAAjBP,YAChBO,EAAML,kBAAkB,CACtBL,SAAWe,KAAKC,MAAQb,EAAYJ,UACpCE,SAAS,IAEXU,GAAUA,EAAOtB,OACjBqB,EAAMQ,aAAa,UAErBI,eAAgB,SAAAZ,GAAK,OAAI,SAAAa,GAAA,IAAGC,EAAHD,EAAGC,IAAH,OAAad,EAAMe,eAAeD,KAC3DE,gBAAiB,SAAAhB,GAAK,OAAI,SAACiB,GAAM,IACvBhB,EAAwBD,EAAxBC,OAAQR,EAAgBO,EAAhBP,YAEVyB,EAAoB,IAAZD,EAAEE,QAAiBF,EAAEG,OAAOC,YACpCC,EAAgB7B,EAAYb,SAAWsC,EAAQ,IAErDjB,GAAUA,EAAOtB,OACjBsB,GAAUA,EAAOlC,KAAKuD,GAEtBtB,EAAMuB,YAAYC,SAASN,EAAM,KACjClB,EAAML,kBAAkB,CACtBN,UAAWgB,KAAKC,MAAuB,IAAfgB,QAI9BG,YAAU,CACRC,kBADQ,WACY,IAAAC,EAAA7C,KAClB8C,YAAY,WAAM,IAAAC,EACyBF,EAAK3B,MAAMP,YAA5CJ,EADQwC,EACRxC,UAAWE,EADHsC,EACGtC,QAASX,EADZiD,EACYjD,SAC5B,GAAGS,IAAcE,EAAS,CACxB,IAAM+B,GAAgBjB,KAAKC,MAAQjB,GAAa,IAC1C6B,EAAOM,SAAyB,IAAfF,EAAsB1C,EAAU,IACvDsC,GAAQ,KAAOS,EAAK3B,MAAMuB,YAAYL,KAExC,QAnFgB/B,CCCS,SAAA9C,GAAA,IAAGyF,EAAHzF,EAAGyF,UAAWC,EAAd1F,EAAc0F,SAAUC,EAAxB3F,EAAwB2F,YAAaC,EAArC5F,EAAqC4F,QAASlC,EAA9C1D,EAA8C0D,eAAgBa,EAA9DvE,EAA8DuE,eAAgBD,EAA9EtE,EAA8EsE,eAAgBK,EAA9F3E,EAA8F2E,gBAA9F,OAC/BxF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,SAAOG,UAAU,cAAjB,yBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gCAAgCqG,QAASlB,GACtDxF,EAAAC,EAAAC,cAAA,OACEG,UAAU,eACVsG,KAAK,cACLC,MAAO,CAACC,MAAK,GAAAC,OAAKP,EAAL,MACbQ,gBAAc,MACdL,QAAS,SAAAjB,GAAC,OAAIR,QAAQC,IAAIO,OAI9BzF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBAEbL,EAAAC,EAAAC,cAAA,WAAMuG,GAAWzG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,4BAE9BL,EAAAC,EAAAC,cAAA,UACEM,KAAK,SACLH,UAAU,kBACVqG,QAAuB,SAAdJ,EAAuB/B,EAAiBY,EACjD6B,SAAUP,GACVzG,EAAAC,EAAAC,cAAA,KAAGG,UAAS,UAAAyG,OAAYR,MAG1BtG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,uBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAC+G,EAAAhH,EAAD,CACEiH,SAAU,IACVC,SAAU,EACVC,MAAO,CAAEC,IAAK,EAAG/B,IAAKkB,GACtBc,SAAUlC,KAGdpF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,4BCvCjBkH,EAAe,kBAAMvH,EAAAC,EAAAC,cAACwD,EAAD,OCCrB8D,EAAY,kBAChBxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9H,IACjCC,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWpH,IACnCT,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWN,IACnCvH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOG,UAAW1H,MCGP2H,SAPH,kBACV9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACbL,EAAAC,EAAAC,cAAC8H,EAAD,UCIcC,QACW,cAA7B9F,OAAO+F,SAASC,UAEe,UAA7BhG,OAAO+F,SAASC,UAEhBhG,OAAO+F,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOtI,EAAAC,EAAAC,cAACqI,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.39e066ce.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => <h3> Home</h3>;\n\nexport { Home };","import React from 'react';\n\nconst NoMatch = () => <h3> 404 Not Found</h3>;\n\nexport { NoMatch };","import React from 'react';\nimport { Example1Container } from './Component';\n\nexport const Example1 = Example1Container;\n","import React from 'react';\n\nexport const Example1Container = () =>\n  <div>\n    <h4>Example 1: <small className=\"text-muted\">Audio element</small></h4>\n    <audio controls>\n      <source src=\"/api/v1/track\" type=\"audio/mpeg\" />\n    </audio>\n  </div>;","import React from 'react';\nimport { Example1 } from \"../components/Example1\";\n\nconst Example1Page = () => <Example1 />;\n\nexport { Example1Page };","import axios from 'axios';\n\nconst getAudioContext =  () => {\n  AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContent = new AudioContext();\n\n  return audioContent;\n};\n\nconst loadFile = (url) => new Promise(async (resolve, reject) => {\n try {\n   // load audio file from server\n   const response = await axios.get(url, {\n     responseType: 'arraybuffer',\n   });\n   // create audio context\n   const audioContext = getAudioContext();\n   // create audioBuffer (decode audio file)\n   const audioBuffer = await audioContext.decodeAudioData(response.data);\n\n   let source = null;\n   let scriptNode = null;\n\n   const play = (resumeTime = 0) => {\n     // create progress source\n     scriptNode = audioContext.createScriptProcessor(4096, audioBuffer.numberOfChannels, audioBuffer.numberOfChannels);\n\n     // create audio source\n     source = audioContext.createBufferSource();\n     source.buffer = audioBuffer;\n\n     source.connect(scriptNode);\n     source.connect(audioContext.destination);\n     scriptNode.connect(audioContext.destination);\n     // can be used here\n     // scriptNode.onaudioprocess = (e) => {};\n     source.start(0, resumeTime);\n   };\n   const stop = () => {\n     source && source.stop(0);\n   };\n\n   resolve({ play, stop, duration: audioBuffer.duration });\n } catch (e) {\n   reject(e)\n }\n});\n\nexport { getAudioContext, loadFile }\n","import React from 'react';\nimport { compose, lifecycle, withState, withHandlers, withProps } from 'recompose';\nimport { loadFile } from './utils';\nimport { Example2Container } from './Component';\n\nexport const Example2 = compose(\n  withState('volumeLevel', 'setVolumeLevel', 50),\n  withState('progress', 'setProgress', 0),\n  withState('playState', 'setPlayState', 'play'),\n  withState('loading', 'setLoading', false),\n  withState('player', 'setPlayer', null),\n  withState('audionState', 'setAudionState', {\n    startedAt: null,\n    pausedAt: null,\n    isPause: true,\n    duration: 0,\n  }),\n  withProps(({ audionState, setAudionState }) => ({\n    changeAudionState: newState => setAudionState({ ...audionState, ...newState }),\n  })),\n  withHandlers({\n    onPlayBtnClick: (props) => async () => {\n      const { player, audionState } = props;\n\n      try {\n        if(!player) {\n          props.setLoading(true);\n          const newPlayer = await loadFile('/api/v1/track');\n\n          props.setLoading(false);\n          props.setPlayer(newPlayer);\n          props.changeAudionState({\n            startedAt: Date.now(),\n            isPause: false,\n            duration: newPlayer.duration,\n          });\n\n          newPlayer.play(0);\n          return props.setPlayState('stop');\n        }\n\n        props.changeAudionState({\n          startedAt: Date.now() - audionState.pausedAt,\n          isPause: false,\n        });\n\n        player.play(audionState.pausedAt / 1000);\n\n        return props.setPlayState('stop');\n      } catch (e) {\n        props.setLoading(false);\n        console.log(e);\n      }\n    },\n    onStopBtnClick: props => () => {\n      const { player, audionState  } = props;\n      props.changeAudionState({\n        pausedAt:  Date.now() - audionState.startedAt,\n        isPause: true,\n      });\n      player && player.stop();\n      props.setPlayState('play');\n    },\n    onVolumeChange: props => ({ max }) => props.setVolumeLevel(max),\n    onProgressClick: props => (e) => {\n      const { player, audionState } = props;\n\n      const rate = (e.clientX * 100) / e.target.offsetWidth;\n      const playbackTime = (audionState.duration * rate) / 100;\n\n      player && player.stop();\n      player && player.play(playbackTime);\n\n      props.setProgress(parseInt(rate, 10));\n      props.changeAudionState({\n        startedAt: Date.now() - playbackTime * 1000,\n      });\n    }\n  }),\n  lifecycle({\n    componentDidMount() {\n      setInterval(() => {\n        const { startedAt, isPause, duration } = this.props.audionState;\n        if(startedAt && !isPause) {\n          const playbackTime = (Date.now() - startedAt) / 1000;\n          const rate = parseInt((playbackTime * 100) / duration, 10);\n          rate <= 100 && this.props.setProgress(rate);\n        }\n      },1000)\n    }\n  })\n)(Example2Container);\n","import React from 'react';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css'\nimport './styles.css';\n\n\nexport const Example2Container = ({ playState, progress, volumeLevel, loading, onPlayBtnClick, onVolumeChange, onStopBtnClick, onProgressClick }) =>\n  <div>\n    <h4>Example 2: <small className=\"text-muted\">Custom audio element</small></h4>\n    <div className=\"player mt-4\">\n      <div className=\"progress player-progress mb-2\" onClick={onProgressClick}>\n        <div\n          className=\"progress-bar\"\n          role=\"progressbar\"\n          style={{width: `${progress}%`}}\n          aria-valuemax=\"100\"\n          onClick={e => console.log(e)}\n        >\n        </div>\n      </div>\n      <div className=\"player-controls mt-2\">\n\n        <div>{loading && <i className=\"fas fa-spinner fa-spin\"></i>}</div>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-warning\"\n          onClick={playState === 'play' ? onPlayBtnClick : onStopBtnClick}\n          disabled={loading}>\n          <i className={`fas fa-${playState}`}></i>\n        </button>\n\n        <div className=\"player-volume-control mt-2\">\n          <i className=\"fas fa-volume-down\"></i>\n          <div className=\"range-select mt-1\">\n            <InputRange\n              maxValue={100}\n              minValue={0}\n              value={{ min: 0, max: volumeLevel }}\n              onChange={onVolumeChange}\n            />\n          </div>\n          <i className=\"fas fa-volume-up\"></i>\n        </div>\n      </div>\n    </div>\n  </div>;\n","import React from 'react';\nimport { Example2 } from \"../components/Example2\";\n\nconst Example2Page = () => <Example2 />;\n\nexport { Example2Page };","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport { Home, NoMatch, Example1Page, Example2Page } from './pages';\n\nconst AppRouter = () =>\n  <Switch>\n    <Route exact path=\"/\" component={Home}/>\n    <Route path=\"/example1\" component={Example1Page}/>\n    <Route path=\"/example2\" component={Example2Page}/>\n    <Route component={NoMatch}/>\n  </Switch>;\n\nexport { AppRouter };","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AppRouter } from './router';\nimport 'bootstrap-material-design/dist/css/bootstrap-material-design.min.css';\n\nconst App = () =>\n  <Router>\n    <div className=\"container-fluid mt-2\">\n      <AppRouter />\n    </div>\n  </Router>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}